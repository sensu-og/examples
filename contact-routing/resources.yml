# Sensu contact routing example
# - Contact filters for the ops team, the dev team, and a fallback option
# - A handler set containing handlers for the ops team, the dev team, and a fallback option
# - An example CPU check labelled with the .....
---
# Contact routing filter asset
type: Asset
api_version: core/v2
metadata:
  name: sensu-go-has-contact-filter_any_noarch
  labels: 
  annotations:
    sensio.io.bonsai.url: https://assets.bonsai.sensu.io/ff68b326056b1641a1a00ca2fb4f0246bb19a9d0/sensu-go-has-contact-filter_0.2.0.tar.gz
    sensio.io.bonsai.tier: Community
    sensio.io.bonsai.version: 0.2.0
    sensio.io.bonsai.tags: eventfilter
spec:
  url: https://assets.bonsai.sensu.io/ff68b326056b1641a1a00ca2fb4f0246bb19a9d0/sensu-go-has-contact-filter_0.2.0.tar.gz
  sha512: d07584ddf9d44b3f68102df7038070995d2001e1b826a3fe0d244f6e0fd69b76f29b853a13fcd8841bdb3adebe8a84b3f64247367ef1c9f364c04c5b8ecc16e6
  filters: []
---
# Sensu slack handler asset
type: Asset
api_version: core/v2
metadata:
  name: sensu-slack-handler_linux_amd64
  labels: 
  annotations:
    sensio.io.bonsai.url: https://assets.bonsai.sensu.io/3149de09525d5e042a83edbb6eb46152b02b5a65/sensu-slack-handler_1.0.3_linux_amd64.tar.gz
    sensio.io.bonsai.tier: Supported
    sensio.io.bonsai.version: 1.0.3
    sensio.io.bonsai.tags: 
spec:
  url: https://assets.bonsai.sensu.io/3149de09525d5e042a83edbb6eb46152b02b5a65/sensu-slack-handler_1.0.3_linux_amd64.tar.gz
  sha512: 68720865127fbc7c2fe16ca4d7bbf2a187a2df703f4b4acae1c93e8a66556e9079e1270521999b5871473e6c851f51b34097c54fdb8d18eedb7064df9019adc8
  filters:
  - entity.system.os == 'linux'
  - entity.system.arch == 'amd64'
---
# Contact filter for the ops team
type: EventFilter
api_version: core/v2
metadata:
  name: contact_ops
spec:
  action: allow
  runtime_assets:
    - sensu-go-has-contact-filter_any_noarch
  expressions:
    - has_contact(event, "ops")
---
# Contact filter for the dev team
type: EventFilter
api_version: core/v2
metadata:
  name: contact_dev
spec:
  action: allow
  runtime_assets:
    - sensu-go-has-contact-filter_any_noarch
  expressions:
    - has_contact(event, "dev")
---
# Contact filter for a fallback option in the event of no contact labels
type: EventFilter
api_version: core/v2
metadata:
  name: contact_fallback
spec:
  action: allow
  runtime_assets:
    - sensu-go-has-contact-filter_any_noarch
  expressions:
    - no_contacts(event)'
---
# Edit before running:
# 1. Add your SLACK_WEBHOOK_URL
# 2. Make sure the Slack channels specified in the
#    command` attributes match channels available
#    to receive test alerts in your Slack instance.
type: Handler
api_version: core/v2
metadata:
  name: slack_ops
spec:
  command: sensu-slack-handler --channel "#alert-ops"
  env_vars:
  - SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T0000/B000/XXXXXXXX
  filters:
  - is_incident
  - not_silenced
  - contact_ops
  runtime_assets:
  - sensu-slack-handler_linux_amd64
  type: pipe
---
type: Handler
api_version: core/v2
metadata:
  name: slack_dev
spec:
  command: sensu-slack-handler --channel "#alert-dev"
  env_vars:
  - SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T0000/B000/XXXXXXXX
  filters:
  - is_incident
  - not_silenced
  - contact_dev
  runtime_assets:
  - sensu-slack-handler_linux_amd64
  type: pipe
---
type: Handler
api_version: core/v2
metadata:
  name: slack_fallback
spec:
  command: sensu-slack-handler --channel "#alert-all"
  env_vars:
  - SLACK_WEBHOOK_URL=https://hooks.slack.com/services/T0000/B000/XXXXXXXX
  filters:
  - is_incident
  - not_silenced
  - contact_fallback
  runtime_assets:
  - sensu-slack-handler_linux_amd64
  type: pipe
---
# A handler set combining the three contact-specific handlers
type: Handler
api_version: core/v2
metadata:
  name: slack
  namespace: default
spec:
  handlers:
  - slack_ops
  - slack_dev
  - slack_fallback
  type: set
---
# Example check definition with contact labels for dev and ops
# Incidents generated by this check result in an alert sent to both dev and ops but not to the fallback option
# Requires a Sensu agent with the system subscription
type: CheckConfig
api_version: core/v2
metadata:
  name: check_cpu
  labels:
    contacts: ops, dev
spec:
  command: check-cpu.rb -w 75 -c 90
  handlers:
  - slack
  interval: 10
  publish: true
  subscriptions:
  - system
  runtime-assets:
  - sensu-plugins-cpu-checks
  - sensu-ruby-runtime
---
# Example proxy entity definition with a contact labels for the ops team
# Incidents generated for this proxy entity result in an alert sent to ops but not to dev or to the fallback option
# Contact labels in check definitions override contact labels in entity and agent entity definitions.
# Requires a check with the sensu-docs proxy_entity_name or matching proxy_request attributes
# See docs.sensu.io/sensu-go/latest/files/agent.yml to add labels to agent entities.
type: Entity
api_version: core/v2
metadata:
  labels:
    url: docs.sensu.io
  name: sensu-docs
  namespace: default
spec:
  deregister: false
  deregistration: {}
  entity_class: proxy
  last_seen: 0
  subscriptions: []
  system:
    network:
      interfaces: null
